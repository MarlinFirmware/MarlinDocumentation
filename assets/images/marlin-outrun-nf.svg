<?xml version="1.0" encoding="UTF-8"?>
<svg width="2025.7" height="1810.9" enable-background="new" version="1.1" viewBox="0 0 1519.2762 1358.1763" xmlns="http://www.w3.org/2000/svg" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xlink="http://www.w3.org/1999/xlink">
<metadata>
<rdf:RDF>
<cc:Work rdf:about="">
<dc:format>image/svg+xml</dc:format>
<dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
<dc:title/>
</cc:Work>
</rdf:RDF>
</metadata>
<defs>
<radialGradient id="b" cx="204.51" cy="119.09" r="282.2" gradientTransform="matrix(2.5631 .037602 -.035588 2.6614 274.79 282.86)" gradientUnits="userSpaceOnUse">
<stop stop-color="#ff0" offset="0"/>
<stop stop-color="#ff7100" offset="1"/>
</radialGradient>
<linearGradient id="c" x1="580.64" x2="660.22" y1="462.99" y2="268.75" gradientTransform="translate(-348.14 -52.102)" gradientUnits="userSpaceOnUse">
<stop stop-color="#fff" offset="0"/>
<stop stop-color="#0ce4e5" offset="1"/>
</linearGradient>
<filter id="d" color-interpolation-filters="sRGB">
<feFlood flood-color="rgb(0,0,0)" flood-opacity=".49804" result="flood"/>
<feComposite in="flood" in2="SourceGraphic" operator="in" result="composite1"/>
<feGaussianBlur in="composite1" result="blur" stdDeviation="10"/>
<feOffset dx="10" dy="10" result="offset"/>
<feComposite in="SourceGraphic" in2="offset" result="composite2"/>
</filter>
<radialGradient id="a" cx="256.75" cy="318.36" r="113.77" gradientTransform="matrix(3.2597 0 0 4.4926 -310.21 -728.32)" gradientUnits="userSpaceOnUse">
<stop stop-color="#ff006c" offset="0"/>
<stop stop-color="#7100ff" offset="1"/>
</radialGradient>
<filter id="e" x="-.21926" y="-.1104" width="1.3969" height="1.3563" color-interpolation-filters="sRGB">
<feGaussianBlur in="SourceAlpha" result="result0" stdDeviation="20"/>
<feOffset dx="-7.9000000000000004" dy="5" result="result4"/>
<feComposite in="SourceGraphic" in2="result4" operator="xor" result="result3"/>
</filter>
<filter id="f" color-interpolation-filters="sRGB">
<feFlood flood-color="rgb(0,0,0)" flood-opacity=".49804" result="flood"/>
<feComposite in="flood" in2="SourceGraphic" operator="in" result="composite1"/>
<feGaussianBlur in="composite1" result="blur" stdDeviation="1"/>
<feOffset dx="5" dy="5" result="offset"/>
<feComposite in="SourceGraphic" in2="offset" result="composite2"/>
</filter>
</defs>
<ellipse id="mfw-sun" cx="801.47" cy="687.61" rx="470.2" ry="492.5" color="#000000" color-rendering="auto" enable-background="accumulate" fill="url(#b)" image-rendering="auto" shape-rendering="auto" solid-color="#000000" style="isolation:auto;mix-blend-mode:normal"/>
<path id="mfw-triangle" transform="matrix(2.4448 0 0 2.5607 160.74 185.71)" d="m173.07-29.35-55.938 154.84 81.471-126.05zm46.318 52.223-118.02 146.25-48.791 135.06 230.75-209.21zm92.438 104.22-262.4 185.8-17.633 48.809 444.86-48.77z" enable-background="new" fill="#d010e4" fill-rule="evenodd" filter="url(#e)"/>
<script type="text/javascript">!function(){const t="http://www.w3.org/2000/svg",e="http://www.w3.org/1999/xlink",s="http://www.w3.org/1999/xhtml",r=2;if(document.createElementNS(t,"meshgradient").x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case"translate":2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error("mesh.js: translate does not have 2 arguments!"),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case"scale":1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error("mesh.js: scale does not have 1 or 2 arguments!"),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case"rotate":if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error("math.js: No argument to rotate transform!");3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case"skewX":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error("math.js: No argument to skewX transform!");break;case"skewY":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error("math.js: No argument to skewY transform!");break;case"matrix":6===l.length?h=h.append(new g(...l)):console.error("math.js: Incorrect number of arguments for matrix!");break;default:console.error("mesh.js: Unhandled transform type: "+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error("mesh.js: argument to Affine.append is not affine!");let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute("type")||"bilinear"}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute("x")),n=Number(t.getAttribute("y"));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute("path"),c="l";null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case"l":0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"L":0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"c":0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case"C":0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error("mesh.js: "+c+" invalid path type.")}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if("bilinear"===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll("rect,circle,ellipse,path,text").forEach((r,n)=&gt;{let o=r.getAttribute("id");o||(o="patchjs_shape"+n,r.setAttribute("id",o));const i=r.style.fill.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/),a=r.style.stroke.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;"meshgradient"===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,"canvas");d(l,{width:i.width,height:i.height});const c=l.getContext("2d");let u=c.createImageData(i.width,i.height);const f=new b(a);"objectBoundingBox"===a.getAttribute("gradientUnits")&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute("gradientTransform");null!=p&amp;&amp;f.transform(h(p)),"userSpaceOnUse"===a.getAttribute("gradientUnits")&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,"image");d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,"xlink:href",g),r.parentNode.insertBefore(y,r),r.style.fill="none";const w=document.createElementNS(t,"use");w.setAttributeNS(e,"xlink:href","#"+o);const m="patchjs_clip"+n,M=document.createElementNS(t,"clipPath");M.setAttribute("id",m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute("clip-path","url(#"+m+")"),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;"meshgradient"===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute("stroke-miterlimit"))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,"canvas");d(p,{width:l,height:c});const y=p.getContext("2d");let g=y.createImageData(l,c);const w=new b(o);"objectBoundingBox"===o.getAttribute("gradientUnits")&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute("gradientTransform");null!=m&amp;&amp;w.transform(h(m)),"userSpaceOnUse"===o.getAttribute("gradientUnits")&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,"image");d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,"xlink:href",S);const k="pattern_clip"+n,A=document.createElementNS(t,"pattern");d(A,{id:k,patternUnits:"userSpaceOnUse",width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke="url(#"+k+")",g=null,p=null,S=null}}})}();</script>
<g>
<path id="mfw-fish-fill" transform="matrix(3.2597 0 0 3.4143 -305.32 -390.13)" d="m270.42 257.46c10.44-8.12 17-5.18 12.5-4.75-7.23 1.02-19.81 13.41-17.37 9.75 8.15-20.45 30.61-27.44 32.65-26.37 12.01-11.85 49.37-36.38 50.03-40.98-0.75 0.49-65.12 41.54-70.49 43.54-5.76 1.5-11.29 6.57-11.29 6.57l-0.31 0.2s-0.03 0.03 0.07 0.53c0.08 0.43 0.08 0.88 0 1.33-0.69-1.4-7.54-3.98-7.94 2.99-1.73-1.5-2.63-4 0.64-6.14 2.04-0.62 3.75-0.93 6-0.18 0.24 0.18 0.45 0.38 0.63 0.59 0.35 0.42 1.44-3.64 4.88-5.58-14.75 0.71-13.26 2.93-17.31 4.19-4.33 0.86-8.3-0.57-17.93-0.02-1.64-2.91-1.5-4.25-16.8-11.65-15.31-7.41-41.76-5.29-38.14-5.46-2.27 1.48 12.37 8 14.37 15.88 2.74 1.96 10.75 2.68 11.48 2.68 0.72 0-7.55 0.46-8.37 0.46-0.81 0 0.5 0.15 0.06 3.04-0.4 2.63-1.9 6.56-4.04 13.44l10.62 2.76s-11.69 1-13.31 3.41c-2.99 6.59-6.06 20.8-7.39 27.34-0.42 2.12 1.58 0.49 1.58 0.49s40.87-10.5 44.87-11.24c2.04-0.39 6.02-0.87 9.63-0.76 1.1 0.04-2.72-0.69-5.5-3.12-2.25-1.96-3.43-5.59-3.88-6.38-1-1.74-0.12-11.12-0.12-11.5 0-0.37 0.12-5.37 0.12-5.37s2.75-2.87 1.88-0.75c-0.88 2.12-0.38 11.5-0.38 11.5s0.25 1.75 0.5 4.62c0.25 2.88 11.13 11.68 12.7 11.73 1.13 0.03 2.06 0.05 2.68 0.03 3-0.13 5.37-1 4.74-0.76-0.62 0.26-1.74 1.63-3.37 2.13s-2.5 0-3.75 0-4.25-0.25-12 0.13c-7.75 0.37-50.37 12.68-50.37 12.68s-8.56 3.62-14.48 6.92c-6.42 4.77-8.07 7.73-8.07 7.73 4.15-2.72 14.43-4.64 21.14-5.66-0.93-0.35-9.71-1.06-11.81-0.21 5.84-3.59 18.47-0.21 37.08-4 0 0-21.06 6.09-22.46 6.91-13.12 15.01 7.18 78.49 12.1 67.15 0.87938 1.0802 1.48 3.62 0.65 6.58-0.82 2.96 1.16 14.16 1.98 19.92 0.66 3.45 4.77 11.02 4.11 9.38-0.64-1.56 4.34-1.53 3.19-11.59 0.31-1.03-1.11-2.96-2.37-3.94 2.02 0.14 3.65 1.56 3.56 1.36 2.02-2.97 5.3-3.63 5.83-5.09 0.66-1.81-0.5-3.62 3.12-1.97 3.63 1.64 36.71 13.82 36.71 13.82l11.35 7.41s2.97-3.13 2.64-4.12 5.92-1.15 8.06-1.48 9.05 2.14 10.86 5.43c10.21 25.51 27.16 29.96 34.89 31.44 7.57 1.15 17.78-3.95 10.54-3.62s-14.65-7.9-21.23-12.51c-6.59-4.61-6.09-18.11-6.26-19.59-0.16-1.48 4.78-3.95 2.14-12.83-2.63-8.89 14.65-25.84 21.89-39.01s22.55-20.08 21.89-21.73c-14.15-1.48-28.14 13.99-34.4 18.93-6.25 4.94-27.81 34.4-30.94 35.88-8.23 0.49-19.58-17.61-19.91-19.42s5.43-2.63 3.29-3.62-9.55 2.3-12.67 4.44c-26.17-14.15-26.05-42.72-28.55-41.78-12.92 19.32 1.41 33.45 0.41 32.81-3.98 1.59-14.66-25.31-5.04-34.98 5.74-5.64 21.29-15.63 21.86-15.44 17.09 17.51 15.17 38.93 19.74 39.42 1.41 0.57-1.39-22.35-9.02-34.27-1.81-3.28-0.9-4.55-0.72-4.37 0.18 0.19 4.54 6.73 6.54 11.82s5.95 17.89 5.95 17.89c0.6-3.04 1.09-6.14 1.27-8.09 0.46-4.75-9.26-28.55-9.48-30.81-0.23-2.27-8.89 6.08-5.76 1.81 3.13-4.28 10.26-5.39 10.26-5.62s2.04-1.13 4.98-3.17 21.95-26.02 24.44-33.26c2.49-7.25 16.52-15.85 12.68-16.3-3.85-0.45-17.96 4.86-17.96 4.86s4.09-7.88 8.17-12.81c-2.95-1.21-24.89 13.39-24.76 18.38z" enable-background="new" fill="url(#c)" filter="url(#d)"/>
<path id="mfw-fish-outline" d="m832.98 270.78-4.5267 3.1008c-0.14515 0.10141-3.8256 2.5635-9.83 6.5685-6.0043 4.0051-14.47 9.6446-24.613 16.385-20.286 13.48-47.286 31.366-74.756 49.414-27.47 18.047-55.411 36.259-77.564 50.374-11.077 7.0574-20.706 13.093-28.096 17.565-7.3894 4.4721-12.778 7.4499-14.433 8.0956l0.24192-0.0811c-16.792 4.5801-30.168 16.328-34.43 20.219 0.48975-0.91683 0.88051-1.6923 1.528-2.7874 2.3278-3.9369 5.7878-8.67 10.855-11.663l-1.3179-4.788c-48.168 2.4286-44.817 10.355-56.93 14.364-12.991 2.6503-26.31-1.6866-56.414-0.11358-2.239-4.2952-4.1471-8.3571-10.588-13.617-7.0839-5.7854-19.53-13.26-44.521-25.921-25.532-12.944-59.766-17.411-86.242-18.845-12.649-0.68459-23.094-0.6146-30.369-0.43306l0.089-0.0608-0.9613 0.0507c-0.1258 4e-3 -0.41756-0.0101-0.54114-7e-3 -3.6292 0.10143-6.2419 0.24342-7.6208 0.33976-0.34479 0.0203-0.60742 0.0406-0.81489 0.0608-0.10364 0.0101-0.1858 0.0203-0.29921 0.0406-0.0571 7e-3 -0.11051 0.0101-0.26108 0.0507-0.0755 0.0203-0.41775 0.14605-0.42018 0.14706-2e-3 7.1e-4 -1.3755 3.1266-1.3752 3.1276 3e-5 9e-5 0.22005 0.20891 0.29273 0.28701-0.06 1.0898 0.20147 2.0592 0.61758 2.8408 0.9103 1.7099 2.344 3.1427 4.1956 4.828 3.7031 3.3708 9.1581 7.445 15.025 12.19 11.734 9.4901 24.822 21.731 27.771 33.903l0.21648 0.90668 0.72577 0.54666c3.7522 2.8114 9.3846 4.5086 15.191 5.8883-0.86773 0.0406-3.4216 0.18662-3.629 0.18662-0.36772 0-0.62619-0.0406-1.2351 0.10649-0.30443 0.071-0.78693 0.19777-1.3115 0.73327-0.52459 0.53549-0.79495 1.4908-0.77677 2.0472 0.0368 1.1129 0.30057 1.2535 0.41379 1.4937 0.11341 0.24036 0.2096 0.43002 0.31198 0.68053 0.40992 1 1.0375 2.9421 0.37556 7.4953-1.2217 8.4137-6.0898 21.962-13.083 45.513l-0.76399 2.5673 24.995 6.8019c-3.1854 0.42901-3.5764 0.31745-7.417 1.0269-5.1594 0.95334-10.505 2.1667-15.006 3.7077-4.5014 1.5411-8.2397 3.1226-10.276 6.2951l-0.10819 0.17343-0.089 0.19979c-10.033 23.161-19.913 71.519-24.257 93.893v0.014c-0.40256 2.1282-0.52594 3.9493 0.78944 5.5081 0.65774 0.77992 1.6487 1.1791 2.432 1.2471 0.78334 0.071 1.4198-0.0811 1.98-0.26673 1.819-0.60649 2.6839-1.479 3.1578-1.8938 0.1979-0.0507 33.2-8.9357 68.027-18.185 17.465-4.6384 35.338-9.3561 49.653-13.07 14.315-3.7141 25.242-6.4521 28.217-7.0286h7e-3l7e-3 -7e-3c6.4336-1.2883 19.348-2.9119 30.84-2.5474 0.2787 0.0101 0.49458 0.0305 0.86589-0.0203 0.18579-0.0203 0.40033-0.0101 0.90411-0.27383 0.25199-0.12881 0.62174-0.34787 0.96771-0.88033 0.34595-0.53245 0.49585-1.4133 0.36927-2.0139-0.25324-1.2012-0.73216-1.3737-0.94863-1.5471-0.21647-0.17343-0.3534-0.24544-0.47755-0.31339-0.24802-0.13691-0.44746-0.22008-0.68126-0.31947-0.93498-0.3996-2.3567-0.92495-4.1956-1.7204-3.6778-1.5914-8.8278-4.1995-13.032-8.049v-7e-3c-3.2631-2.9774-5.9608-7.4843-7.9518-11.61-1.9911-4.1257-3.1072-7.5315-4.1828-9.5094v-7e-3c-0.26505-0.48276-0.93102-3.586-1.1142-7.3154-0.18318-3.7293-0.13432-8.2773 0.0193-12.69 0.15318-4.4128 0.40701-8.6951 0.62386-11.957 0.10858-1.6307 0.20796-3.008 0.28005-4.0211 0.0426-0.60243 0.0484-0.86004 0.0697-1.1937 7.3e-4 0.2211-0.0126 0.43306-0.0126 0.65315 0.0494 8.9842 0.45839 17.038 0.45839 17.038l7e-3 0.1136 0.0194 0.11358s0.80057 5.8895 1.6108 15.631c0.32659 3.9406 3.0586 7.5126 6.6912 11.85 3.6326 4.3373 8.3604 9.0757 13.223 13.51 4.863 4.4348 9.8518 8.555 14 11.617 2.0741 1.5308 3.9354 2.7953 5.5135 3.7211 1.2808 0.75152 2.2884 1.1404 3.5144 1.3737-4.1698-0.071-13.229-0.81338-37.365 0.42699-6.8541 0.3428-20.137 3.234-36.754 7.362-16.618 4.1281-36.373 9.5076-55.332 14.844-37.917 10.673-72.662 21.186-72.662 21.186l-0.14022 0.0406-0.13364 0.0608s-27.929 12.356-47.437 23.747l-0.14012 0.0811-0.12744 0.10142c-10.577 8.2316-17.276 14.942-21.353 19.639-4.0775 4.6971-5.6344 7.5622-5.6344 7.5622l3.4762 3.3876c6.2104-4.2635 17.868-8.2828 30.56-11.49 12.692-3.2072 26.484-5.7075 37.378-7.4421l9.257-1.4737-8.7604-3.4543c-0.84489-0.33266-1.5919-0.44219-2.7376-0.62678-1.1457-0.18458-2.5654-0.36917-4.202-0.54665-1.4708-0.16025-3.4813-0.25356-5.2269-0.39351 5.5561-0.3144 10.827-0.67748 17.661-0.76673 12.608-0.16431 28.013-0.96958 44.693-2.6674-2.1235 0.66024-2.1008 0.63387-4.272 1.3137-8.873 2.7762-17.888 5.6449-24.989 7.9955-3.5503 1.1754-6.6209 2.2182-8.9705 3.0676-2.3496 0.8499-3.7416 1.3191-4.8959 2.0272l-0.34383 0.21299-0.26108 0.31338c-11.459 13.732-15.183 37.414-14.739 64.618 0.44466 27.204 5.2381 58.035 11.874 86.057 6.6356 28.022 15.085 53.184 23.034 69.179 3.9748 7.9976 7.6571 13.719 11.683 16.585 2.0128 1.4328 4.4633 2.1656 6.7231 1.287 0.79399-0.30832 1.4067-0.93306 2.0373-1.5204 1.3722 3.8116 2.3476 9.3726 0.43295 16.525v7e-3c-0.84171 3.1825-0.85573 7.5241-0.57936 12.944 0.27647 5.4194 0.92076 11.81 1.7317 18.485 1.6219 13.35 3.9107 27.853 5.2397 37.63l7e-3 0.0607 0.0126 0.0607c1.1897 6.5136 5.1238 15.848 8.5121 23.166 1.6942 3.659 3.2467 6.7538 4.2783 8.6557 0.51577 0.9513 0.6529 1.3584 1.3115 2.134 0.0823 0.1014 0.1737 0.215 0.40749 0.3996 0.117 0.091 0.2637 0.2099 0.54752 0.3336 0.14176 0.061 0.55139 0.1593 0.5539 0.1602 2e-3 5e-4 0.85109-0.01 0.85312-0.01 2e-3 -3e-4 0.96605-0.432 0.96774-0.433 1e-3 0 0.65445-0.712 0.65571-0.713 1e-3 0 0.22131-0.4554 0.27385-0.6339 0.0523-0.1785 0.0813-0.3245 0.0958-0.4472 0.0581-0.4899 1e-3 -0.6673-0.0261-0.8266-0.10006-0.5913-0.20602-0.7668-0.34383-1.1136 0.0474-0.091 0.25887-0.43 0.74493-0.9604 1.0319-1.1255 2.94-2.866 4.7813-5.5949 3.6826-5.4578 6.93-14.854 5.0105-32.442l-0.089 1.0336c0.90507-3.1498-0.47698-6.0178-2.1455-8.7491 0.59852 0.3621 1.2239 0.73943 1.6234 1 0.28518 0.1866 0.47195 0.32355 0.82128 0.50708 0.17477 0.0913 0.0677 0.41685 1.407 0.31342 0.1675-0.0105 0.60238-0.12577 0.6048-0.12682 2e-3 0 0.75587-0.432 0.75761-0.43305 2e-3 0 0.32631-0.41483 0.49023-0.61965 0.0193-0.0308 0.0445-0.0405 0.0639-0.0712 2.9868-4.5592 6.9158-7.4246 10.543-9.8226 3.6474-2.4114 7.2933-4.0804 8.6713-8.0423 0.66171-1.9008 0.83957-3.6861 0.9741-5.068 0.12125-1.2451 0.27676-1.9759 0.33104-2.1872 0.06 0-0.0194 0 0.10171 8e-3 0.76505 0.0712 2.6148 0.61763 5.4562 1.9739h7e-3c3.1931 1.5109 12.048 5.1063 23.83 9.796 11.782 4.6897 26.372 10.415 40.593 15.964 28.311 11.047 54.901 21.304 55.147 21.399l38.467 26.307 1.4007-1.5538s2.4903-2.7398 4.8704-5.9615c1.1901-1.611 2.3599-3.333 3.2278-5.0282 0.641-1.252 1.0847-2.5626 1.0951-4.0476 0.22915-0.1096 0.41224-0.2181 0.96774-0.3804 1.6027-0.4665 4.2042-0.8904 7.0669-1.2336 5.7254-0.6877 12.471-1.0895 16.254-1.7007 1.0941-0.1764 3.6801 0.031 6.6976 0.8002 3.0176 0.7658 6.5516 2.0234 10.04 3.6476 6.977 3.249 13.704 8.1491 16.146 12.797 33.606 87.638 90.005 103.53 115.41 108.62l0.0484 0.011 0.0484 0.01c13.03 2.0733 27.707-1.3891 36.595-5.3015 2.2221-0.9777 4.0767-1.9793 5.5262-3.0342 1.4495-1.0549 2.7876-1.9745 3.0814-4.1945 0.14709-1.11-0.37159-2.4622-1.1142-3.1809-0.74318-0.7191-1.5533-1.0433-2.432-1.2871-1.7574-0.4868-3.9678-0.6003-7.0478-0.4533-10.839 0.5172-22.358-5.8167-33.864-14.544-11.506-8.7272-22.894-19.686-33.826-27.708-9.7983-7.1795-14.744-21.957-17.043-35.79-1.1494-6.9163-1.665-13.544-1.9227-18.759-0.25741-5.2146-0.21193-8.6864-0.41417-10.529l7e-3 0.011c0.0194 0.212 0.38127-1.0379 1.6617-2.9808 1.2807-1.9431 3.09-4.5845 4.6412-8.0957 3.102-7.0211 5.0223-17.54 0.58546-33.176v-8e-3c-1.8741-6.6439-0.22741-15.39 4.1-25.514 4.3285-10.126 11.228-21.519 19.17-33.403 15.883-23.768 35.901-49.476 47.883-72.307 11.537-21.981 29.642-38.927 44.681-51.054 7.5194-6.0637 14.254-10.917 19.068-14.677 2.407-1.8802 4.3274-3.4672 5.7172-4.9346 0.6948-0.73327 1.2716-1.4213 1.7126-2.2807 0.44127-0.85902 0.7906-2.1466 0.29901-3.4343l-0.54771-1.4338-1.4643-0.16025c-24.022-2.6315-47.447 9.7088-67.384 24.554-19.936 14.845-36.597 32.415-46.521 40.618-5.4842 4.5404-13.626 13.982-23.27 25.901-9.6437 11.918-20.664 26.239-31.362 40.184-10.697 13.945-21.071 27.512-29.382 37.877-4.1552 5.1825-7.7965 9.5674-10.677 12.77-2.6954 2.9973-4.7548 4.7194-5.3288 5.1081-5.6786 0.15518-12.352-2.8572-19.17-8.169-7.0174-5.4675-14.091-13.101-20.379-21.006-6.2881-7.9052-11.803-16.084-15.789-22.633-1.9928-3.2744-3.6033-6.1423-4.7304-8.3423-1.127-2.2-1.7673-4.0722-1.7445-3.9411-0.0193-0.10954-0.0436-0.10142 0.11477-0.36714 0.1584-0.26977 0.55197-0.72008 1.1524-1.1936 1.2008-0.94828 3.1305-1.9644 4.9786-2.9141 1.8482-0.94929 3.5458-1.6275 4.9532-3.1676 0.35186-0.38539 0.71435-0.86917 0.94224-1.5671 0.2279-0.69777 0.22751-1.6432-0.0571-2.394-0.56949-1.5014-1.6177-2.078-2.7377-2.6207-2.7002-1.3084-5.8383-1.0163-9.4607-0.27992-3.6224 0.7363-7.7174 2.0948-11.899 3.781-7.799 3.1446-15.458 7.394-20.844 11.07-41.311-23.811-61.971-59.267-73.324-88.691-5.7265-14.842-9.0776-28.115-11.523-37.577-1.2229-4.7312-2.201-8.4864-3.2342-11.196-0.51666-1.355-1.0012-2.452-1.8272-3.4277-0.41301-0.48783-0.94504-0.97262-1.6999-1.2602-0.7548-0.28803-1.7072-0.26775-2.4384 0.0203l-0.73854 0.28701-0.43294 0.68662c-21.269 33.313-20.357 62.619-14.312 83.203-1.7445-4.9416-3.4428-10.12-4.794-15.691-3.1525-12.998-4.9204-27.173-4.0046-39.958 0.91505-12.774 4.4914-24.051 11.759-31.715l0.0126-0.0101c2e-3 -2e-3 3e-3 -4e-3 7e-3 -7e-3 9.0869-9.3472 26.415-22.703 41.593-33.509 7.593-5.4062 14.667-10.199 19.927-13.577 2.6303-1.6892 4.8087-3.0248 6.3411-3.8944 0.40547-0.23023 0.61807-0.32759 0.92318-0.48682 26.667 29.159 38.764 61.334 45.871 86.751 3.6044 12.889 5.945 24.005 8.3784 32.216 1.2167 4.1054 2.4366 7.4872 4.0109 10.116 1.4779 2.4679 3.5397 4.3094 6.1055 4.8013 0.78208 0.24036 1.9384 0.1572 2.5848-0.35294 0.69576-0.5497 0.93246-1.1186 1.1142-1.6005 0.36337-0.96349 0.4551-1.8646 0.53474-3.0075 0.15938-2.2857 0.0687-5.4126-0.23563-9.3358-0.60945-7.8466-2.107-18.788-4.533-31.082-4.8415-24.536-13.307-54.363-26.007-75.214-0.89783-1.7041-0.5662-2.0569-1.0569-3.3875 0.97977 1.6508 1.7855 2.9427 2.9032 4.9147 4.4048 7.7713 9.5452 17.633 12.714 26.08 6.4099 17.087 19.329 60.904 19.329 60.904l4.7367-0.25963c1.9671-10.439 3.5736-21.033 4.1765-27.868v-7e-3c0.47166-5.12-1.3891-13.044-4.1828-23.146-2.7946-10.106-6.6437-22.056-10.562-33.729-3.9185-11.674-7.9024-23.07-10.944-32.009-1.5209-4.4696-2.8123-8.328-3.7308-11.276-0.91853-2.9486-1.4578-5.2462-1.4834-5.5216v-0.014c-0.089-0.92394-0.47426-2.005-1.286-2.7341-0.8117-0.72921-1.8193-0.93611-2.6167-0.92698-0.26398 3e-3 -0.46429 0.19372-0.71308 0.22718 1.6329-0.82048 3.2661-1.8833 4.8386-2.5207 3.435-1.3924 6.5773-2.3684 8.8878-3.0542 1.1552-0.3428 2.0956-0.61258 2.814-0.84078 0.35921-0.11358 0.65328-0.20588 0.98043-0.34685 0.16364-0.071 0.32679-0.13692 0.6112-0.33367 0.14215-0.10142 0.32011-0.22515 0.56029-0.52028 0.0233-0.0304 0.029-0.12273 0.0513-0.15315 0.06-0.0507 0.26505-0.20588 0.59213-0.41988 0.6916-0.45436 1.8279-1.134 3.266-2.0072 2.8762-1.7466 7.009-4.302 11.88-7.8422 1.6126-1.172 3.5631-3.2205 6.2329-6.2217 2.6698-3.0012 5.9285-6.8939 9.5881-11.437 7.3191-9.0851 16.234-20.768 25.11-33.016 8.8761-12.248 17.711-25.053 24.855-36.383 7.1444-11.33 12.591-21.051 14.796-27.768 3.6966-11.274 16.896-24.89 27.758-35.496 5.4308-5.303 10.23-9.8573 13.109-13.497 1.4394-1.8199 2.5905-3.2569 2.744-5.4948 0.0774-1.119-0.42482-2.5659-1.337-3.361-0.91253-0.79514-1.9183-1.0516-2.9668-1.1803-3.8591-0.47262-9.1074 0.4858-15.286 1.9939-6.1788 1.5085-13.147 3.6458-19.717 5.8283-9.8705 3.2785-14.692 5.2137-18.546 6.6952 3.6753-7.112 12.672-24.119 23.232-37.484l2.1201-2.6807-3.075-1.3204c-2.4927-1.0709-4.8724-0.32252-7.9455 0.74645-3.0731 1.0698-6.7329 2.7966-10.83 5.0147-8.1934 4.4359-18.088 10.855-27.682 17.952-9.5939 7.0967-18.873 14.849-25.816 22.006-3.4717 3.5786-6.3612 7.0067-8.4357 10.209-2.0746 3.203-3.4446 6.1727-3.3679 9.256l0.12096 5.0681 3.82-3.1075c6.1029-4.9719 11.574-8.3598 16.668-11.11-6.6659 4.1725-13.278 9.0096-19.004 13.444-4.2169 3.265-6.8999 5.4027-9.7982 7.6821 13.518-30.764 35.983-52.211 56.707-65.351 11.063-7.0141 21.52-11.762 29.541-14.511 4.0103-1.3742 7.4207-2.245 9.9255-2.6541 1.2524-0.20487 2.28-0.29412 2.9922-0.28702 0.71221 7e-3 1.1203 0.19574 0.88543 0.071l1.5853 0.86714 1.267-1.3137c19.273-19.918 59.548-51.047 95.168-79.015 17.81-13.984 34.475-27.197 46.877-37.951 6.2012-5.377 11.33-10.129 15.051-14.117 3.7203-3.9879 6.2138-6.8037 6.6913-10.289zm-15.222 16.311c-3.0926 3.0288-6.0606 5.9851-10.409 9.756-12.26 10.631-28.894 23.829-46.692 37.804-35.154 27.602-74.63 58.075-94.754 78.615-0.38514-0.0406-0.75576-0.2424-1.1714-0.24645-1.1038-0.0101-2.3504 0.11156-3.7882 0.34685-2.8756 0.46958-6.4859 1.407-10.689 2.8475-8.4072 2.8809-19.161 7.7742-30.553 14.997-22.681 14.381-47.89 38.067-61.469 73.367-0.5331 0.83875-0.90122 1.4461-1.1778 2.2407-0.13983 0.40162-0.36849 0.86207-0.15909 1.8538 0.10461 0.49595 0.42666 1.1496 0.92947 1.567 0.50291 0.41785 1.057 0.55578 1.4516 0.58722 1.5782 0.12576 1.8278-0.38235 2.4575-0.75354 0.62968-0.3712 1.3194-0.8499 2.1264-1.4404 3.228-2.3608 8.2962-6.5522 14.363-11.25 12.134-9.3949 28.399-20.59 39.021-22.16l-0.10819 0.01c1.9929-0.19979 3.4354-0.50913 4.6412-1.0869 0.60287-0.28905 1.2032-0.60549 1.7508-1.4538 0.54762-0.84787 0.57472-2.578-7e-3 -3.4543-0.5811-0.87627-1.2228-1.1671-1.8208-1.4138-0.59804-0.24645-1.2208-0.39351-1.9227-0.49999-1.4038-0.21299-3.1223-0.2353-5.2142-0.0304-7.1455 0.71095-18.712 4.5927-32.68 14.384 1.7765-2.5816 4.0614-5.4309 7.0669-8.529 6.6475-6.852 15.771-14.501 25.205-21.479 9.4346-6.9788 19.201-13.304 27.109-17.585 3.9537-2.1406 7.4522-3.7693 10.129-4.7013 0.28489-0.10142 0.21676-0.0203 0.48384-0.0913-12.337 17.037-23.811 39.411-23.811 39.411l-2.9414 5.9283 5.9718-2.354s11.448-4.5131 24.441-8.8291c6.4969-2.1579 13.38-4.2629 19.354-5.7216 5.698-1.3911 10.422-1.999 12.969-1.8071-0.23321 0.46348-0.25257 0.65618-0.99962 1.6004-2.4292 3.0714-7.2298 7.693-12.682 13.017-10.905 10.648-24.624 24.09-29.044 37.57-1.853 5.6434-7.1981 15.423-14.255 26.614-7.0566 11.191-15.836 23.929-24.664 36.11-8.828 12.181-17.708 23.811-24.957 32.809-3.6243 4.4988-6.8438 8.3437-9.4289 11.25-2.5851 2.906-4.6601 4.9388-5.4434 5.5081-4.7125 3.425-8.6981 5.888-11.543 7.6154-1.4223 0.86411-2.5514 1.5331-3.4061 2.0939-0.42733 0.27991-0.78044 0.52433-1.1396 0.83366-0.0948 0.0811-0.20892 0.2211-0.31198 0.32658-0.0736 0.0203-0.0736 0.0203-0.16557 0.0507-0.59243 0.18762-1.5482 0.46248-2.7313 0.81339-2.3662 0.70182-5.6699 1.7277-9.3206 3.2075-7.3015 2.9597-16.076 7.6884-21.64 15.658-1.3191 1.8849-2.0564 2.9298-2.4957 4.2945-0.10983 0.34178-0.23273 0.72413-0.19102 1.367 0.0416 0.64301 0.49072 1.7172 1.267 2.2139 0.77619 0.49696 1.4244 0.44422 1.8399 0.38641 0.41553-0.0608 0.70041-0.16429 0.96772-0.27383 1.0692-0.43814 1.9959-1.094 3.2087-1.9472 1.2129-0.85295 2.5987-1.8876 4.0619-2.9676 2.9264-2.1596 6.1873-4.503 8.493-5.7082 0.78024-0.4077 1.091-0.45435 1.4771-0.56693 0.25818 1.4542 0.61671 2.919 1.3879 5.3948 0.94563 3.0357 2.2421 6.9227 3.769 11.41 3.0538 8.9742 7.033 20.349 10.938 31.982 3.9048 11.633 7.7389 23.523 10.486 33.456 2.7468 9.9329 4.2809 18.243 4.0046 21.232v0.014c-0.35621 4.0426-1.5721 10.897-2.5594 17.065-3.0873-10.383-10.724-36.452-16.267-51.228-3.3505-8.9314-8.58-18.921-13.058-26.821-2.2389-3.95-4.2859-7.3668-5.819-9.8494-0.76651-1.2413-1.4009-2.2469-1.8718-2.9741-0.23534-0.36309-0.43168-0.65923-0.58574-0.88641-0.15386-0.22718-0.09-0.21197-0.48384-0.64706l-0.0194-0.0304-0.0261-0.0203c-0.47282-0.49494-1.2607-0.81543-1.8972-0.80731-0.63645 0.01-1.0926 0.22312-1.4261 0.44017-0.66694 0.43305-0.9715 0.90872-1.2415 1.407-0.54007 0.99595-0.81693 2.1926-0.86589 3.7144-0.0978 3.0436 0.81083 7.3295 3.9091 13.21l0.0377 0.071 0.0445 0.071c12.125 19.841 20.635 49.4 25.415 73.627 2.3902 12.113 3.8638 22.918 4.4502 30.468 0.2578 3.3187 0.27251 5.6923 0.2037 7.5087-0.42762-0.40466-0.79176-0.30729-1.2988-1.1536-1.1524-1.9243-2.3207-4.9955-3.4825-8.9158-2.3237-7.8404-4.6964-19.059-8.3529-32.136-7.3132-26.152-19.84-59.858-48.074-90.158l-0.41378-0.44017-0.56029-0.1998c-1.2157-0.42393-1.4491-0.0811-1.7699 0.0101-0.32079 0.10141-0.58922 0.21095-0.88495 0.34685-0.59145 0.27079-1.2796 0.63388-2.1137 1.107-1.6683 0.94625-3.8949 2.3163-6.5703 4.0344-5.3507 3.4363-12.468 8.257-20.118 13.704-15.3 10.894-32.659 24.207-42.287 34.116l-0.0126 0.0101-7e-3 7e-3c-8.3988 8.8428-12.221 21.418-13.192 34.97-0.97074 13.552 0.89182 28.187 4.1447 41.598 3.2528 13.411 7.8855 25.58 12.638 34.223 2.376 4.3213 4.7627 7.7584 7.2006 10.109 1.2189 1.1755 2.4539 2.098 3.8327 2.6474 0.80396 0.32049 1.7063 0.071 2.5912 0.0406 0.09 0.0507 0.0958 0.0811 0.27375 0.13996 0.10461 0.0406 0.23467 0.0811 0.42018 0.11359 0.1855 0.0304 0.7728 6.1e-4 0.77667 0 3e-3 -6e-4 1.1944-0.56491 1.1969-0.56694 2e-3 -2e-3 0.78199-1.23 0.78306-1.2337 7.4e-4 -4e-3 0.11602-0.70081 0.10171-0.92698-0.0126-0.22616-0.0513-0.38134-0.0832-0.5071-0.0638-0.25051-0.1229-0.37829-0.17177-0.48682-0.0977-0.21602-0.1675-0.32961-0.23562-0.44016-0.27183-0.44421-0.5661-0.83671-1.0059-1.4538-0.87973-1.2341-2.2315-3.1341-3.82-5.6882-3.1769-5.1082-7.2824-12.79-10.199-22.519-5.6548-18.862-6.5787-45.426 12.173-76.521 0.83309 2.2069 1.8171 5.8598 3.0241 10.529 2.4386 9.4345 5.8505 22.968 11.708 38.151 11.715 30.364 33.311 67.439 76.571 91.939l1.3115 0.74645 1.2351-0.8864c4.8225-3.4647 13.341-8.084 21.341-11.31 4.0001-1.6129 7.8852-2.8867 11.071-3.5343 2.0051-0.4077 2.8688-0.14604 4.0746-0.0608-0.37314 0.20893-0.38689 0.25659-0.79583 0.46653-1.8393 0.94524-3.969 2.0004-5.7681 3.421-0.89957 0.70994-1.7396 1.5144-2.3747 2.594-0.6351 1.0796-1.0139 2.532-0.76399 3.9678 0.29175 1.6761 1.0404 3.0922 2.2474 5.4482 1.207 2.3559 2.8753 5.3137 4.9214 8.6758 4.0922 6.724 9.7029 15.045 16.152 23.153 6.4492 8.1077 13.721 15.997 21.22 21.839 7.4985 5.8424 15.282 9.7653 22.913 9.2893l0.47118-0.03 0.42655-0.20693c2.2019-1.0904 4.1668-3.2507 7.1624-6.5818 2.9956-3.3309 6.6749-7.7688 10.861-12.99 8.373-10.443 18.758-24.023 29.452-37.964 10.694-13.941 21.697-28.242 31.279-40.084 9.5824-11.843 17.867-21.301 22.569-25.194 10.482-8.6639 26.826-25.94 46.323-40.458 18.089-13.469 38.712-23.882 59.247-23.453-0.99885 0.89047-1.8271 1.6886-3.3361 2.8674-4.6757 3.6526-11.487 8.5647-19.125 14.724-15.276 12.319-33.922 29.656-45.986 52.641-11.618 22.136-31.566 47.842-47.603 71.84-8.0186 11.999-15.069 23.576-19.628 34.243-4.5594 10.667-6.7391 20.536-4.3294 29.068 4.1665 14.679 2.3362 23.537-0.33095 29.575-1.3337 3.0187-2.9045 5.3285-4.2274 7.3353-1.3228 2.0069-2.7847 3.7029-2.502 6.4418v0.02c0.0774 0.6836 0.12483 4.862 0.38804 10.203 0.26418 5.3409 0.78867 12.173 1.9863 19.379 2.3952 14.412 7.3786 30.544 19.062 39.104 10.518 7.7182 21.928 18.685 33.762 27.661 11.834 8.9758 24.19 16.12 36.952 15.511 1.9026-0.091 2.7362 0.071 3.7627 0.1937-1.0087 0.6603-2.2103 1.3784-3.8964 2.1206-8.013 3.5271-22.288 6.802-33.928 4.9614-24.975-5.0125-78.914-19.53-111.87-105.77l-0.0571-0.1399-0.0697-0.14c-3.4588-6.5852-10.94-11.516-18.444-15.011-3.752-1.7472-7.5284-3.091-10.88-3.9411-3.3521-0.8499-6.1947-1.2736-8.5885-0.88643-3.1924 0.51518-10.127 0.96143-16.063 1.6737-2.968 0.356-5.6918 0.7658-7.8245 1.3871-1.0663 0.3103-1.9825 0.6288-2.8777 1.2804-0.44755 0.3266-0.92859 0.7606-1.2797 1.487-0.35108 0.7262-0.43004 1.7761-0.17835 2.5675-0.20108-0.6319-0.0813 0.3478-0.72576 1.6071-0.64478 1.2592-1.6928 2.8312-2.7886 4.3145-1.558 2.1089-2.416 3.024-3.2342 3.961l-35.43-24.227-0.26108-0.1014s-26.952-10.398-55.383-21.493c-14.216-5.5471-28.804-11.269-40.568-15.951-11.76-4.681-20.817-8.3796-23.544-9.6694-3.0586-1.4602-5.1614-2.2478-7.0733-2.4139-0.95598-0.0811-1.9267 0-2.8268 0.4533-0.90005 0.44827-1.6008 1.2684-1.9864 2.0473-0.77115 1.5578-0.76098 2.9223-0.89133 4.2612-0.13035 1.3388-0.28654 2.6386-0.70032 3.8277v7e-3c-0.35214 1.0161-2.9177 2.9667-6.6913 5.4614-3.2913 2.1759-7.1721 5.2585-10.518 9.6094-0.49082-0.31335-0.87828-0.57405-1.5662-0.96045-2.2847-1.2818-5.5494-2.7772-9.3652-3.0541l-8.0028-0.58013 6.3284 5.1547c1.791 1.4591 3.8594 3.7994 5.2333 6.0284 1.374 2.229 1.7422 4.3589 1.6553 4.6613l-0.14631 0.50714 0.0571 0.52635c1.8291 16.76-1.1694 24.485-4.1447 28.895-1.446 2.143-2.9128 3.4835-4.1956 4.868-0.81103-1.6106-1.5063-2.9165-2.5148-5.0947-3.3082-7.1453-7.1399-16.618-8.1046-21.886-6.1e-4 0-7e-3 -0.0105-7e-3 -0.0105-1.3457-9.886-3.6078-24.26-5.2079-37.43-0.80261-6.6064-1.4343-12.904-1.6999-18.112-0.26534-5.2044-0.0871-9.4242 0.4075-11.296v-7e-3c2.8837-10.779 1.1275-19.998-2.5785-24.767l-2.5402-3.2676-1.5959 3.8688c-0.85845 2.0723-1.714 2.8123-2.1646 2.9874-0.45056 0.17546-1.0249 0.16836-2.2729-0.72008-2.4958-1.7767-6.2752-7.0397-10.091-14.717-7.6317-15.355-16.061-40.317-22.627-68.046-6.5661-27.729-11.298-58.272-11.734-84.91-0.43169-26.409 3.5736-48.818 13.313-60.79 0.28557-0.12576 1.5707-0.70994 3.6289-1.4538 2.2782-0.82354 5.3223-1.8598 8.8495-3.0275 7.0546-2.3355 16.059-5.1969 24.919-7.9689 17.719-5.5441 34.87-10.736 34.87-10.736l-1.1651-4.968c-30.086 6.4178-55.337 6.764-75.59 7.0286-19.981 0.26166-35.13 0.2647-45.597 6.7419-0.029 0.0101-0.0803 7e-3 -0.10819 0.0203l0.0126 0.0304c-0.11342 0.071-0.26341 0.0913-0.37566 0.16633l2.1965 4.5546c1.0524-0.44625 4.0742-0.94321 7.659-1.1003 3.5848-0.1572 7.8492-0.0913 11.995 0.10649 0.40275 0.0203 0.70138 0.0608 1.1014 0.0913-7.2152 1.3625-14.045 2.4059-21.334 4.2478-8.0684 2.0388-15.232 4.4603-21.627 7.1153 3.9195-4.3324 9.2838-9.818 18.546-17.038 19.014-11.079 46.479-23.274 46.673-23.36 0.15192-0.0507 34.64-10.478 72.42-21.112 18.931-5.3289 38.649-10.696 55.185-14.804 16.536-4.1079 30.086-6.9398 35.863-7.2287h7e-3c25.179-1.2931 34.595-0.44017 38.995-0.44017 1.7113 0 3.3097 0.3925 5.3798 0.62677 2.07 0.23429 4.5654 0.2211 7.5571-0.74036 3.1051-0.99797 5.5856-2.8011 7.5126-4.3744 1.9233-1.5704 3.6106-2.9396 3.699-2.9808 1.7e-4 -1e-4 7e-3 -7e-3 7e-3 -7e-3 0.089-0.0406 0.17216-0.0608 0.25461-0.10143 0.0542-0.0203 0.059-0.0101 0.29272-0.14706 0.059-0.0305 0.29795-0.19877 0.29921-0.19979 5.6e-4 -5.1e-4 0.36259-0.34584 0.36288-0.34686 3.3e-4 -4e-4 0.60481-1.4268 0.60481-1.4271 3e-5 -2.1e-4 -1.1203-2.4405-1.1205-2.4407-2.3e-4 -2e-4 -0.99903-0.38032-0.99956-0.38032-5.2e-4 0-0.38117-0.0202-0.38204-0.0202-7.5e-4 9e-5 -0.13818 7e-3 -0.18453 0.0101-0.37015 0.0406-0.33105 0.0608-0.38834 0.071-0.0571 0.0101-0.10267 0.0305-0.15289 0.0406-0.10007 0.0305-0.21154 0.0608-0.3565 0.10649-0.57946 0.16734-1.6119 0.45741-3.0114 0.7931-2.7927 0.67039-7.026 1.4925-11.695 1.7072-1.887 0.0608-4.9128 2e-3 -8.5821-0.10142 0.45559 0.0101-0.75035-0.25153-2.0946-1.0403-1.3442-0.78803-3.1038-1.9773-5.0869-3.441-3.9663-2.9273-8.8541-6.9627-13.599-11.29-4.745-4.3272-9.3587-8.9565-12.765-13.024-3.4063-4.067-5.4135-7.9398-5.4944-8.9157-0.81074-9.7489-1.6058-15.614-1.6235-15.744-2e-3 -0.0507-0.40372-7.9278-0.45201-16.738-0.0233-4.4192 0.0416-9.0567 0.28654-12.977 0.24444-3.9201 0.78141-7.2629 1.2224-8.3757v-7e-3h7e-3c0.40362-1.0301 0.66567-1.8097 0.72576-2.7807 0.029-0.4858 0.0261-1.0739-0.31846-1.7938-0.34499-0.72008-1.2043-1.399-1.9227-1.5604-1.4367-0.32352-2.0242 0.20589-2.6103 0.54057-0.58613 0.33469-1.109 0.73022-1.6426 1.1669-2.1343 1.7479-4.3929 4.2412-4.3929 4.2412l-0.65581 0.72008-0.0193 0.99392s-0.0994 4.2686-0.19722 8.6958c-0.0978 4.4272-0.19751 8.7875-0.19751 9.696 0-0.33164-0.0358 0.61765-0.10818 1.6271-0.0716 1.0101-0.17051 2.3941-0.28005 4.0411-0.21908 3.294-0.48036 7.6316-0.63665 12.13-0.15647 4.4985-0.20863 9.1501-0.0126 13.137 0.19596 3.9868 0.39221 7.1216 1.7572 9.6093 0.39404 0.72819 1.9325 4.857 4.0619 9.2692 2.1324 4.4187 5.0266 9.449 9.0978 13.164 3.1605 2.8936 6.4773 4.8846 9.6008 6.5285-8.668 0.41278-16.969 1.2839-21.914 2.2739-3.5488 0.68864-14.159 3.3786-28.484 7.0953-14.331 3.7183-32.208 8.4371-49.678 13.077-34.94 9.2796-68.25 18.238-68.25 18.238l-0.52206 0.13996-0.41388 0.36004s-0.67642 0.39656-1.1905 0.74037c4.3163-22.225 14.371-70.457 23.792-92.399 0.65135-0.95335 3.5647-2.8372 7.6462-4.2345 4.1286-1.4134 9.304-2.5988 14.331-3.5277 10.054-1.8576 19.494-2.7074 19.494-2.7074l0.40749-5.028-32.113-8.7424c6.4652-21.514 11.142-34.59 12.466-43.705 0.57327-3.9439 0.22587-6.4396-0.2484-8.329 2.7688-0.0913 7.5351-0.33266 13.3-0.66734 3.3942-0.19676 6.6311-0.39249 8.8814-0.54057 1.1251-0.071 1.9965-0.13489 2.5466-0.17952 0.27511-0.0203 0.36936-0.0203 0.68754-0.071 0.0397-7e-3 0.0832-0.01 0.16557-0.0304 0.0406-0.0101 0.0958-0.0202 0.17177-0.0507 0.0755-0.0202 0.35543-0.14604 0.35649-0.14705 7.5e-4 -6.2e-4 1.063-1.0132 1.0632-1.0132 2.6e-4 -5.1e-4 -0.57249-3.2938-0.57297-3.2943-5.4e-4 -4e-4 -0.85815-0.46653-0.85951-0.46653-2e-3 -4e-4 -0.23408-0.0608-0.2992-0.071-0.52082-0.0913-0.41621-0.0305-0.52208-0.0305-0.19295 0-2.4511-0.143-5.3288-0.47363-2.8777-0.32961-6.5921-0.83976-10.498-1.5538-7.6204-1.3924-15.937-3.7976-19.749-6.4618-4.0592-14.154-17.436-26.088-28.987-35.43-5.9534-4.8149-11.448-8.9381-14.815-12.003-1.2248-1.1149-1.7354-1.8201-2.2729-2.514 1.401-0.071 2.5374-0.14706 4.8895-0.21297 7.1485-0.1998 18.32-0.26167 31.4 0.44726 26.161 1.4169 59.99 5.9822 84.363 18.338 24.882 12.605 37.144 20.051 43.636 25.354 6.4927 5.3026 7.2928 8.2357 10.059 13.377l0.75121 1.3937 1.5152-0.0913c31.112-1.8612 43.887 3.1202 58.789 0.0203l0.12096-0.0304 0.12744-0.0406c13.106-4.2709 10.565-10.586 47.934-13.43-2.5111 2.6691-4.5986 5.4303-6.0482 7.8822-1.0321 1.7455-1.6943 3.0511-2.292 4.1678-0.14177-0.11967-0.24056-0.26369-0.38834-0.38032l-0.31846-0.24645-0.37566-0.13387c-7.8785-2.7507-14.245-1.5701-21.041 0.5933l-0.33743 0.1065-0.29272 0.19979c-5.7806 3.9624-8.3919 8.846-8.2575 13.524 0.13432 4.6778 2.7392 8.6385 5.9082 11.517l3.7563 3.4142 0.28653-5.2014c0.3025-5.5229 1.7699-8.7432 3.5716-10.65 1.8018-1.9063 4.0883-2.6799 6.6403-2.7541 2.5521-0.071 5.2959 0.63185 7.4298 1.6205 2.1339 0.98885 3.6186 2.5929 3.6035 2.5606l3.2979 7.0019 1.3052-7.6821c0.30994-1.8262 0.31063-3.6776-7e-3 -5.4616v-0.0101l-7e-3 -0.0202c-7e-3 -0.0304-2.3e-4 -0.0202-7e-3 -0.0507l0.0446-0.0507s17.922-16.979 35.767-21.846l0.12096-0.0305 0.11525-0.0406c2.7212-1.0616 7.726-3.9562 15.172-8.4624 7.4455-4.5061 17.097-10.556 28.191-17.625 22.189-14.137 50.141-32.353 77.621-50.407 27.48-18.054 54.484-35.944 74.775-49.427 8.7082-5.7865 15.39-10.244 21.131-14.07zm-269.48 156.77c2.7435-0.18864 5.5568 0.21805 8.7795 1.2937 0.4822 0.41583 0.95104 0.83672 1.3306 1.3004l-0.0194-0.0305c0.26989 0.33874 0.94495 0.34584 1.528 0.52637-7.5e-4 2e-3 -7e-3 4e-3 -7e-3 7e-3 -0.0832 0.25051-0.11079 0.43205-0.12744 0.58012-0.0329 0.29615-0.0193 0.48378-7e-3 0.69981 7e-3 0.11257 0.0551 0.35699 0.0697 0.4868-0.42501-0.22008-0.75596-0.48072-1.216-0.69371-2.7261-1.2634-6.0692-2.1615-9.5435-2.0605-3.4743 0.10142-7.1545 1.2822-9.9764 4.2678-1.8809 1.9901-3.092 4.99-3.9409 8.4623-0.74473-1.3396-1.1898-2.7327-1.2287-4.0877-0.0755-2.6361 1.2224-5.6139 5.8318-8.8692 3.0664-0.96248 5.7984-1.6997 8.5249-1.8871zm-99.446 44.306c-0.34528 1.9081-0.79893 3.5622-0.95502 6.0417 0.0542-2.4233 0.10103-4.6314 0.11477-5.2281 0.14631-0.15517 0.55778-0.52231 0.84044-0.81339zm57.598 94.273c-0.16721 0.0608-0.28885 0.21196-0.45839 0.26673-2.3216 0.74544-3.9013 0.73225-5.5962 0.53956-0.67941-0.0811-1.6157-0.14301-2.3684-0.25964 1.4296 0.0203 3.256 0.0811 4.2974 0.0507h0.0252c1.6586-0.071 2.5977-0.40872 4.1001-0.5933zm47.558 50.887c0 0.89756-0.32902 1.2582-0.45201 1.4205-0.0813 0.10649-0.0765 0.0913-0.089 0.10142 0.23273-0.31542 0.54113-0.76978 0.54113-1.5204zm-135.78 184.92c0.34382 1.1107 0.78335 1.9372 1.1524 2.9942-0.3953-1.0167-0.76805-1.9342-1.1524-2.9942z" color="#000000" color-rendering="auto" dominant-baseline="auto" enable-background="accumulate" fill="url(#a)" image-rendering="auto" shape-rendering="auto" solid-color="#000000" style="font-feature-settings:normal;font-variant-alternates:normal;font-variant-caps:normal;font-variant-ligatures:normal;font-variant-numeric:normal;font-variant-position:normal;isolation:auto;mix-blend-mode:normal;shape-padding:0;text-decoration-color:#000000;text-decoration-line:none;text-decoration-style:solid;text-indent:0;text-orientation:mixed;text-transform:none;white-space:normal"/>
</g>
<g id="mfw-logo" transform="matrix(9.6769 0 0 10.142 -174.68 -4230)" enable-background="new" stroke-width=".10094">
<g>
<path transform="matrix(.32575 0 0 .32231 -121.96 365.96)" d="m642.24 336.76c-11.753 0-21.318 9.5512-21.318 21.305v36.702c0 11.753 9.5644 21.306 21.318 21.306h211.46c11.753 0 21.318-9.5528 21.318-21.306v-56.295c-6e-3 -1.0547-0.61357-1.6641-2.1402-1.7109h-184.37z" enable-background="new" fill="#ff0" filter="url(#f)" stroke="url(#meshgradient861108)" stroke-width=".23401"/>
<path d="m86.2 474.06c-3.9592 0-7.1808 3.2154-7.1808 7.1722v12.356c0 3.9568 3.2217 7.1727 7.1808 7.1727h71.23c3.9592 0 7.181-3.2159 7.181-7.1727v-18.952c-2e-3 -0.35506-0.20668-0.5602-0.72094-0.57598h-62.106zm0 2.0722h63.361c0.84293 0.0425 1.4942 0.1874 1.958 0.64157 0.81178 0.79491 8.7765 8.0926 10.616 9.8953 0.19468 0.1908 0.40265 0.62857 0.40265 1.1347v5.784c0 2.8445-2.2608 5.1-5.1071 5.1h-71.23c-2.8462 0-5.1071-2.2555-5.1071-5.1v-12.356c0-0.0889 2e-3 -0.17713 0.0064-0.26482 0.1353-2.7184 2.3434-4.8352 5.1006-4.8352z" fill="#00f"/>
<path d="m134.78 477.65-7e-3 13.384c0 1.7488 0.59681 3.1677 1.7907 4.2563 1.2125 1.1064 2.7096 1.8621 4.6123 1.8621 0.16799 0 0.49492-0.0143 0.49492-0.0143v-3.0111c-0.15118 0.0176-0.30559-1e-3 -0.4668-1e-3 -0.97002 0-1.6933-0.35268-2.2902-0.92375-0.59694-0.57104-0.89563-1.3202-0.89509-2.2482l7e-3 -13.304z" fill="#00f"/>
<path d="m84.072 482.79c0-1.4812 0.52232-2.7304 1.567-3.7476 1.0446-1.0172 2.3318-1.5258 3.8614-1.5258 0.70886 0 1.3244 0.0982 1.8468 0.29445 0.54098 0.1606 0.99801 0.37474 1.3711 0.64243 0.33578 0.1963 0.66223 0.44614 0.97936 0.7495l0.61559 0.56216c0.13058-0.16061 0.2425-0.28554 0.33577-0.37477 0.11193-0.10708 0.21453-0.1963 0.3078-0.26768 0.16789-0.16061 0.59694-0.46399 1.2872-0.91014 0.69021-0.46396 1.6416-0.69595 2.8541-0.69595 1.4923 0 2.7795 0.50859 3.8614 1.5258 1.082 1.0172 1.6229 2.2664 1.6229 3.7476v14.348h-3.6376v-14.134c0-0.6246-0.26116-1.1778-0.78348-1.6597-0.50367-0.48182-1.1006-0.72271-1.7908-0.72271-0.67156 0-1.2312 0.22304-1.6789 0.66916-0.4477 0.42829-0.67155 0.99936-0.67155 1.7132v14.134h-3.6096v-14.134c0-0.58892-0.22385-1.1332-0.67156-1.6329-0.4477-0.49967-0.97935-0.7495-1.5949-0.7495s-1.1846 0.24983-1.7069 0.7495c-0.48501 0.49964-0.72752 1.044-0.72752 1.6329v14.134h-2.8823c-0.50266 0-0.7553-0.25248-0.7553-0.75746z" fill="#00f"/>
<path d="m112.7 497.13c-1.5258 0.048-3.7176-0.40153-5.098-1.6864-1.3804-1.3027-2.0706-2.9177-2.0706-4.845 0-1.963 0.70886-3.6226 2.1266-4.9788s3.1526-2.0344 5.2046-2.0344 3.7402 0.67812 5.0646 2.0344c1.3245 1.3562 1.9867 3.123 1.9867 5.3001v6.2102h-3.2738v-6.1031c0-1.3206-0.35444-2.3735-1.0633-3.1586-0.70887-0.80306-1.6509-1.2046-2.8261-1.2046-1.0633 0-1.9774 0.37476-2.7422 1.1243-0.76483 0.74951-1.1472 1.6328-1.1472 2.65 0 1.0886 0.40107 2.0076 1.2032 2.7571 0.82079 0.7495 2.0347 0.96537 3.0303 0.92723h2.2665v3.0111z" fill="#00f"/>
<path d="m127.33 483.78c-1.9027 0-3.4603 0.55302-4.6728 1.6594-1.1939 1.0886-1.7907 2.5074-1.7907 4.2562v7.4415h3.2458v-7.3613c0-0.92796 0.29815-1.6773 0.89509-2.2484 0.59694-0.57107 1.3807-0.85671 2.3507-0.85671 0.93272 0 1.6975 0.2945 2.2945 0.88343 0.61559 0.58887 0.92322 1.3293 0.92322 2.2216l-0.0158 0.17891h3.2458l0.0158-0.2591c0.10747-1.7634-0.60627-3.1944-1.8188-4.2829-1.2125-1.0886-2.7701-1.6327-4.6728-1.6327z" fill="#00f"/>
<path d="m146.91 489.7c0-1.7488 0.59694-3.1676 1.7908-4.2561 1.2125-1.1064 2.7702-1.6596 4.6729-1.6596s3.4604 0.54428 4.6729 1.6328c1.2125 1.0886 1.8188 2.5162 1.8188 4.2829v6.664c-4e-3 0.52502-0.25623 0.7775-0.77374 0.7775h-2.4721v-7.3612c0-0.89226-0.3078-1.6328-0.92339-2.2217-0.59694-0.5889-1.3618-0.88335-2.2945-0.88335-0.97003 0-1.7535 0.28551-2.3504 0.85656-0.59694 0.57107-0.89541 1.3206-0.89541 2.2485v7.3612h-3.2458z" fill="#00f"/>
<path d="m142.69 483.2h3.2738l1e-5 -1.528v-0.42276c0-0.84648-0.6634-1.5279-1.4874-1.5279h-0.29898c-0.82403 0-1.4874 0.68146-1.4874 1.5279v0.42276z" color="#000000" color-rendering="auto" enable-background="accumulate" fill="#00f" fill-rule="evenodd" image-rendering="auto" shape-rendering="auto" solid-color="#000000" style="isolation:auto;mix-blend-mode:normal"/>
<path d="m142.69 483.99h3.2738v13.143h-3.2738z" color="#000000" color-rendering="auto" enable-background="accumulate" fill="#00f" fill-rule="evenodd" image-rendering="auto" shape-rendering="auto" solid-color="#000000" style="isolation:auto;mix-blend-mode:normal"/>
</g>
</g>
</svg>
